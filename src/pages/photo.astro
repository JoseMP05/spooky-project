---
import pirateCostume from '@examples/pirate_costume.jpg'
import angelCostume from '@examples/angel_costume.jpg'
import chuckyCostume from '@examples/chucky_costume.jpg'
import devilCostume from '@examples/devil_costume.jpg'
import astronautCostume from '@examples/astronaut_costume.jpg'
import marioCostume from '@examples/mario_costume.jpg'
import princessCostume from '@examples/princess_costume.jpg'
import scaryClownCostume from '@examples/scary-clown_costume.jpg'
import shrekCostume from '@examples/shrek_costume.jpg'
import spidermanCostume from '@examples/spiderman_costume.jpg'
import skeletonCostume from '@examples/skeleton_costume.jpg'
import vampireCostume from '@examples/vampire_costume.jpg'

const costumeExamples = [
  { src: pirateCostume.src, name: "Pirate", alt: "" },
  { src: angelCostume.src, name: "Angel", alt: "" },
  { src: chuckyCostume.src, name: "Chucky", alt: "" },
  { src: devilCostume.src, name: "Devil", alt: "" },
  { src: astronautCostume.src, name: "Astronaut", alt: "" },
  { src: marioCostume.src, name: "Mario Mario", alt: "" },
  { src: princessCostume.src, name: "Princess", alt: "" },
  { src: scaryClownCostume.src, name: "Scary Clown", alt: "" },
  { src: shrekCostume.src, name: "Shrek", alt: "" },
  { src: spidermanCostume.src, name: "Spiderman", alt: "" },
  { src: skeletonCostume.src, name: "Skeleton", alt: "" },
  { src: vampireCostume.src, name: "Vampire", alt: "" },
]

import { getCldImageUrl } from "astro-cloudinary/helpers"

import Layout from "@layouts/Layout.astro"

import ExampleButton from "@components/ExampleButton.astro"
import CostumeForm from "@components/CostumeForm.astro"
import CostumeImage from '@components/CostumeImage.astro'
import ShareAndDownload from '@components/ShareAndDownload.astro'

const { searchParams } = Astro.url
const id = searchParams.get("id")

if (id == null) Astro.redirect("/")

const url = getCldImageUrl({ src: id })
---
<Layout title="Cloudinary Photo">
  <main data-id={id} id="appLayout">
    <div class="interactive">
      <section class="costume-form">
        <CostumeForm id="costumeForm"/>
      </section>
      <section class="examples">
        <h2 class="examples__title">Explore some examples</h2>
        <div class="examples__container">
          {costumeExamples.map((example) => (
            <ExampleButton class:list={['examples__buttons']} {...example} />
          ))}
        </div>
      </section>
    </div>
    <div class="result">
      <CostumeImage url={url} />
    </div>
    <div class="share">
      <ShareAndDownload/>
    </div>
  </main>
  <!-- testing video-->
  <video autoplay style="display: block; margin: 0 auto;">   
    <source src="videos/TheRing.webm" type="video/webm" />
    <source src="videos/TheRing.mp4" type="video/mp4" />
  </video>
</Layout>

<style>

  main {
    display: grid;
    grid-template-columns: 1fr 1fr 0fr;
    justify-items: center;
    justify-content: center;
    align-items: center;
    margin-inline: auto;
    gap: 48px;
    transition: grid-template-columns 0.5s;
  }
  
  .interactive{
    width: 100%;
  }

  .examples__container{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(125px, 1fr));
    gap: 12px;
  }

  .result{
    height: 100%;
  }

  .share{
    min-width: 0px;
    width: 100%; 
    max-width: 500px;
    height: 100%;

    section{
      opacity: 0;
      visibility: hidden;
    }
  }
</style>

<script>
  import { applyTransformationToImage } from "@helpers/applyTransformationToImage"
  import { processImage } from "@helpers/processImage"
  import { animationLoadImage, animationShowImage, createImageDownloadLink } from "@utils/utils.js"

  const id = document.querySelector("main")?.getAttribute("data-id") ?? ""
  const imgToTransform = document.getElementById("transformation") as HTMLImageElement
  const buttons = document.querySelectorAll(".examples__buttons")
  const costumeForm = document.getElementById("costumeForm") as HTMLButtonElement
  
  costumeForm.addEventListener('submit', async event => {
    event.preventDefault()
    
    const costumeTopic = document.getElementById('wearInput') as HTMLInputElement
    const backgroundTopic = document.getElementById('backgroundInput') as HTMLInputElement
    const animationPromise = animationLoadImage()
    window.scrollTo(0, 65)
    const newUrlImg = await applyTransformationToImage({
      id, 
      imgToTransform, 
      costumeTopic: costumeTopic.value, 
      backgroundTopic: backgroundTopic.value
    })

    processAndAnimateImage({src: newUrlImg.src, imgToTransform, animationPromise})
    createImageDownloadLink({imgSrc: newUrlImg.src, name: costumeTopic})
  })
    
    buttons.forEach((button) => {
      button.addEventListener("click", async (e) => {
        const costumeTopic = button.getAttribute("data-topic")
        const animationPromise = animationLoadImage()
        window.scrollTo(0, 65)
        const newUrlImg = await applyTransformationToImage({id, costumeTopic, imgToTransform})
    
        await processAndAnimateImage({src: newUrlImg.src, imgToTransform, animationPromise})
        createImageDownloadLink({imgSrc: newUrlImg.src, name: costumeTopic})
      })
    })

  async function processAndAnimateImage({src, imgToTransform, animationPromise}) {
    const isProcessed = await processImage(src)

    if (isProcessed) {
      const idAnimation = await animationPromise
      clearInterval(idAnimation)

      imgToTransform.src = src
      imgToTransform.onload = () => {
        animationShowImage()
      }
      
    }
  }
</script>